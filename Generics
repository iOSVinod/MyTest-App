import UIKit

//*********************************************
// Generic sample function to call a get API
//*********************************************
func fetchAPIData<T: Codable>( stringUrl: String, completion: @escaping (T) -> ()) {
    
    guard let urlLocal = URL(string: urlString) else { return}
    
    URLSession.shared.dataTask(with: urlLocal) { (data, response, error) in
        guard error == nil , let data = data else {
            return
        }
        
        do {
            let object = try JSONDecoder().decode(AppResponseData<T>.self, from: data)
            completion(object)
        }
        catch{
         debugPrint("JSON Serialization error")
        }
        }.resume()
}

//*********************************************
// Will be Called a web-api
//*********************************************
func callWebAPI() {
     let strURL = <YOUR_API_URL>//"https://www.7timer.info/bin/astro.php?lon=75.8577&lat=22.7196&ac=0&unit=metric&output=json&tzshift=0"
      self.fetchAPIData(stringUrl: strURL) { ( weatherInfo: [Weather]) in
       debugPrint(weatherInfo.count)
   }
}

//****** Models ******************
struct AppResponseData<T>: Codable where T: Codable {
    let product: String
    let dataseries: T
}

struct Weather: Codable {
    let timePoint: Int?
    enum CodingKeys: String, CodingKey {
        case timePoint = "timePoint"
    }
    
    init(from decoder: Decoder) throws {
        let values = try decoder.container(keyedBy: CodingKeys.self)
        timePoint = try values.decodeIfPresent(Int.self, forKey: .timePoint)
    }
}
//*****************************

